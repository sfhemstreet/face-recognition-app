{"ast":null,"code":"var _jsxFileName = \"/Users/spencerhemstreet/Documents/Coding/faceAnalysis/face_detector_react/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/navigation/Navigation.js';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport Logo from './components/logo/Logo.js';\nimport ImageLinkForm from './components/image_link_form/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport { particlesOptions } from './constants/particleConstants';\nimport Clarifai from 'clarifai';\nimport { API_KEY } from './constants/apiKey.js';\nconst app = new Clarifai.App({\n  apiKey: API_KEY\n});\nconst initialState = {\n  input: '',\n  imageURL: '',\n  faceBox: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        faceBox: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = event => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        // increment num of entries\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        } // calculate face location then display box\n\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err, 'API CALL ERROR'));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      faceBox: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  /* LOAD USER\n    gets user data from signin or register\n  */\n\n\n  // RENDER \n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageURL = _this$state.imageURL,\n          route = _this$state.route,\n          faceBox = _this$state.faceBox;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onButtonSubmit: this.onButtonSubmit,\n      onInputChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: faceBox,\n      imageURL: imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/spencerhemstreet/Documents/Coding/faceAnalysis/face_detector_react/src/App.js"],"names":["React","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","particlesOptions","Clarifai","API_KEY","app","App","apiKey","initialState","input","imageURL","faceBox","route","isSignedIn","user","id","name","email","entries","joined","Component","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","target","value","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/navigation/Navigation.js';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport Logo from './components/logo/Logo.js';\nimport ImageLinkForm from './components/image_link_form/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport {particlesOptions} from './constants/particleConstants';\nimport Clarifai from 'clarifai';\nimport {API_KEY} from './constants/apiKey.js';\n\nconst app = new Clarifai.App({\n  apiKey: API_KEY\n});\n\nconst initialState = {\n  input: '',\n  imageURL: '',\n  faceBox: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n  }\n};\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      faceBox: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n      }\n    }\n  }\n\n  /* LOAD USER\n    gets user data from signin or register\n  */\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    }})\n  }\n\n  // ROUTER\n  onRouteChange = (route) => {\n    if(route === 'signOut'){\n      this.setState(initialState);\n    }\n    else if(route === 'home'){\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  // CALCULATE FACE BOX\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  // DISPLAYS FACE BOX\n  displayFaceBox = (box) => {\n    this.setState({ faceBox: box });\n  }\n\n  // UPDATE INPUT -- URL for FACE RECOGNITION\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  // SUMBITS URL TO FGACE RECOG API\n  onButtonSubmit = (event) => {\n    this.setState({ imageURL: this.state.input });\n    \n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        // increment num of entries\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}));\n          })\n        }\n        // calculate face location then display box\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err, 'API CALL ERROR'));\n  }\n\n  // RENDER \n  render(){\n    const { isSignedIn, imageURL, route, faceBox } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles \n          className='particles'\n          params={particlesOptions} \n        />\n        <Navigation  \n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {\n          route === 'home'\n          ? \n          <div>\n            <Logo />\n            <Rank \n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm \n              onButtonSubmit={this.onButtonSubmit}\n              onInputChange={this.onInputChange}\n            />\n            <FaceRecognition \n              box={faceBox}\n              imageURL={imageURL}\n            />\n            </div>\n          : (\n            route === 'signIn' \n            ?\n            <SignIn \n              loadUser={this.loadUser}\n              onRouteChange={this.onRouteChange}\n            />\n            :\n            <Register \n              loadUser={this.loadUser}\n              onRouteChange={this.onRouteChange}\n            />\n          )\n          \n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}