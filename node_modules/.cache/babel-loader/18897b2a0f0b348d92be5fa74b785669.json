{"ast":null,"code":"var _jsxFileName = \"/Users/spencerhemstreet/Documents/Coding/faceAnalysis/face_detector_react/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/navigation/Navigation.js';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport Logo from './components/logo/Logo.js';\nimport ImageLinkForm from './components/image_link_form/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport { particlesOptions } from './constants/particleConstants';\nconst initialState = {\n  input: '',\n  imageURL: '',\n  faceBox: [],\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      let faces = [];\n\n      for (let i = 0; i < data.outputs[0].data.regions.length; i++) {\n        const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n        const image = document.getElementById('inputImage');\n        const width = Number(image.width);\n        const height = Number(image.height);\n        faces.push({\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        });\n      }\n\n      return faces;\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        faceBox: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = event => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then((response => response.json()).then(response => {\n        // increment num of entries\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        } // calculate face location then display box\n\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err, 'API CALL ERROR')));\n    };\n\n    this.state = initialState;\n  }\n  /* LOAD USER\n    gets user data from signin or register\n  */\n\n\n  // RENDER \n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageURL = _this$state.imageURL,\n          route = _this$state.route,\n          faceBox = _this$state.faceBox;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), {\n      'home': React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onButtonSubmit: this.onButtonSubmit,\n        onInputChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: faceBox,\n        imageURL: imageURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })),\n      'signIn': React.createElement(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }),\n      'register': React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })\n    }[route]);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/spencerhemstreet/Documents/Coding/faceAnalysis/face_detector_react/src/App.js"],"names":["React","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","particlesOptions","initialState","input","imageURL","faceBox","route","isSignedIn","user","id","name","email","entries","joined","App","Component","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","faces","i","outputs","regions","length","clarifaiFace","region_info","bounding_box","image","document","getElementById","width","Number","height","push","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","target","value","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/navigation/Navigation.js';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport Logo from './components/logo/Logo.js';\nimport ImageLinkForm from './components/image_link_form/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport {particlesOptions} from './constants/particleConstants';\n\n\nconst initialState = {\n  input: '',\n  imageURL: '',\n  faceBox: [],\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n  }\n};\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  /* LOAD USER\n    gets user data from signin or register\n  */\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    }})\n  }\n\n  // ROUTER\n  onRouteChange = (route) => {\n    if(route === 'signOut'){\n      this.setState(initialState);\n    }\n    else if(route === 'home'){\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  \n  // CALCULATE FACE BOX\n  calculateFaceLocation = (data) => {\n    \n    let faces = [];\n    for(let i = 0; i < data.outputs[0].data.regions.length; i++){\n      const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      faces.push({\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height),\n      })\n    }\n    return faces;\n    \n  }\n  \n\n  // DISPLAYS FACE BOX\n  displayFaceBox = (box) => {\n    this.setState({ faceBox: box });\n  }\n\n  // UPDATE INPUT -- URL for FACE RECOGNITION\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  // SUMBITS URL TO FGACE RECOG API\n  onButtonSubmit = (event) => {\n    this.setState({ imageURL: this.state.input });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {'Content-Type' : 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then((response => response.json())\n      .then((response) => {\n        // increment num of entries\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}));\n          })\n          .catch(console.log)\n        }\n        // calculate face location then display box\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.log(err, 'API CALL ERROR')))\n  }\n\n  // RENDER \n  render(){\n    const { isSignedIn, imageURL, route, faceBox } = this.state;\n\n    return(\n      <div className=\"App\">\n        <Particles \n          className='particles'\n          params={particlesOptions} \n        />\n        <Navigation  \n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {{\n          'home':\n            <div>\n              <Logo />\n              <Rank \n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm \n                onButtonSubmit={this.onButtonSubmit}\n                onInputChange={this.onInputChange}\n              />\n              <FaceRecognition \n                box={faceBox}\n                imageURL={imageURL}\n              />\n            </div>,\n          'signIn':\n            <SignIn \n              loadUser={this.loadUser}\n              onRouteChange={this.onRouteChange}\n            />,\n          'register':\n            <Register \n              loadUser={this.loadUser}\n              onRouteChange={this.onRouteChange}\n            />\n        }[route]}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}