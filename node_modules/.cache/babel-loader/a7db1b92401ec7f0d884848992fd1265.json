{"ast":null,"code":"const calculateFaceLocations = data => {\n  let faces = [];\n\n  for (let i = 0; i < data.outputs[0].data.regions.length; i++) {\n    const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    faces.push({\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    });\n  }\n\n  return faces;\n};\n\nexport default calculateFaceLocations;","map":{"version":3,"sources":["/Users/spencerhemstreet/Documents/Coding/faceAnalysis/face_detector_react/src/actions/calculateFaceLocations.js"],"names":["calculateFaceLocations","data","faces","i","outputs","regions","length","clarifaiFace","region_info","bounding_box","image","document","getElementById","width","Number","height","push","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row"],"mappings":"AAAA,MAAMA,sBAAsB,GAAIC,IAAD,IAAU;AAErC,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBH,IAAhB,CAAqBI,OAArB,CAA6BC,MAAhD,EAAwDH,CAAC,EAAzD,EAA4D;AAC1D,UAAMI,YAAY,GAAGN,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBH,IAAhB,CAAqBI,OAArB,CAA6BF,CAA7B,EAAgCK,WAAhC,CAA4CC,YAAjE;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACAb,IAAAA,KAAK,CAACc,IAAN,CAAW;AACTC,MAAAA,OAAO,EAAEV,YAAY,CAACW,QAAb,GAAwBL,KADxB;AAETM,MAAAA,MAAM,EAAEZ,YAAY,CAACa,OAAb,GAAuBL,MAFtB;AAGTM,MAAAA,QAAQ,EAAER,KAAK,GAAIN,YAAY,CAACe,SAAb,GAAyBT,KAHnC;AAITU,MAAAA,SAAS,EAAER,MAAM,GAAIR,YAAY,CAACiB,UAAb,GAA0BT;AAJtC,KAAX;AAMD;;AACD,SAAOb,KAAP;AAED,CAjBH;;AAmBE,eAAeF,sBAAf","sourcesContent":["const calculateFaceLocations = (data) => {\n    \n    let faces = [];\n    for(let i = 0; i < data.outputs[0].data.regions.length; i++){\n      const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      faces.push({\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height),\n      })\n    }\n    return faces;\n    \n  }\n\n  export default calculateFaceLocations;"]},"metadata":{},"sourceType":"module"}